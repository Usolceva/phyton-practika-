#1. Напишите программу, которая принимает на вход число N и выдаёт последовательность из N членов.
# num = int(input('введите целое число: '))
# for i in range(num):
#     print((-3)**i)

#2. Напишите программу, которая будет на вход принимать число N и выводить числа от -N до N
# num = int(input('введите целое число: '))
# if num > 0:
#     for i in range(-num, num+1):
#         print(i, end = ' ')
# elif num < 0:
#     for i in range(num,(-num)+1, 1):
#         print(i, end = ' ')

# num = int(input('введите целое число: ')) 
# my_list = [] # abs - число по модулю (5/5=1) (5/-5=-1)
# for i in range(-num, (num+abs(num)//num, (abs(num)//num)): # чтобы работала в обе стороны при вводе(и 5 или -5) полож. числа и отрицателльного
#     my_list.append(i)
# print(*my_list, sep= ', ') # * означает что разварачиваем список (убираем скобки) сеп добавляет запятую

#3.Напишите программу, которая будет принимать на вход дробь и показывать первую цифру дробной части числа.
# num = float(input('введите дробное число: '))
# a = (num * 10) % 10
# if (int(num) == num):
#      print('дробной части нет')
# else:
#        print(f'первая цифра дробной части равна: {(int(abs(num) * 10) % 10)}')
#      
#                      ИЛИ:2 РЕШЕНИЕ
# num = float(input('введите дробное число: '))
# if num != int(num):
#     print(f'первая цифра дробной части  числа {num} =  {(int(abs(num) * 10) % 10)}')
# else:
#     print(f'у числа {num} дробной части нет')
#        
# 
#                            ИЛИ:3 РЕШЕНИЕ через строку
# num = input('введите дробное число: ')
# num = num.split('.') # [45.76] = ['45', '76']
# print(num) #чтобы посмотреть как выводит число
# if len(num) > 1:
#     print(num[1][0]) #  1 индекс это число после запятой [76], 0 индекс это первая цифра от [76] = 7
# else:
#     print('дробной части нет')

# import random
# random.randint(1, 100)

# from random import randint
# randint(1,100)

# from random import randint as RI # RI новое сокращенное название 
# RI(1,100)
my_list = [10,20,15,45,69,78,36]
for i in range(len(my_list)): #обращаемся к значениям а не к индексам
    print(my_list[i])


